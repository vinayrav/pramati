package com.practice.demo;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import javax.annotation.processing.Messager;

import org.aspectj.lang.annotation.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.validation.MessageCodesResolver;

@RunWith(SpringRunner.class)
public class PageControllerTest {
	

    private MockMvc mockMvc;

    @InjectMocks
    private PageController pageController;

    @org.junit.Before
    public void setUp() {
        mockMvc = MockMvcBuilders.standaloneSetup(pageController).build();
        System.out.println("done"); 
    }

    @Test
    public void testPageController() throws Exception {

    	        mockMvc.perform(get("/"))
                .andExpect(status().isOk())
                .andExpect(content().string("Ok"));
        System.out.println("success");
    }

}
 
